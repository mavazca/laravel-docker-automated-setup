services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /var/www/
    volumes:
      - ./:/var/www/
      - ssl-certificates:/etc/nginx/ssl
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    networks:
      - control360

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: ["php", "artisan", "queue:work", "--sleep=3", "--tries=3"]
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
    networks:
      - control360

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/certs/server.crt:/etc/ssl/certs/server.crt
      - ./docker/nginx/certs/server.key:/etc/ssl/private/server.key
    depends_on:
      - app
    networks:
      - control360

  mysql:
    image: mysql:latest
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      LANG: C.UTF-8
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - control360

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - control360

  mailpit:
    image: axllent/mailpit:latest
    restart: on-failure
    tty: true
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - control360

volumes:
  mysql-data:
  ssl-certificates:

networks:
  control360:
    driver: bridge